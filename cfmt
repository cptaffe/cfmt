#!/bin/bash

# 1. takes in filename to format with astyle
# 2. creates tmp folder to output files
# 3. moves files in tmp folder to current folder
# 4. removes tmp folder

TMP="/tmp/astyle-fmt/"

OPT="--recursive --lineend=linux --style=attach --delete-empty-lines --align-pointer=name --align-reference=name --unpad-paren --pad-header --pad-oper --break-blocks --indent-switches --indent-cases --indent-labels --indent=force-tab --add-one-line-brackets --indent-col1-comments --delete-empty-lines"

# find source dir
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
SCRIPT_DIR=$DIR"/scripts" # helper scripts.

mkdir -p $TMP # create tmp file

for f in $@
do
	mkdir -p $TMP"$(dirname "$f")" # create dirs in tmp
	astyle $OPT < $f > $TMP$f # fmt files
	ERR=$? # preserve in ERR

	# This is how you add optional scripts.
	# Put them in the "scripts" directory where this script
	# is stored, then copy the following if block and place it after
	# this one, assigning your script's name to $SCRIPT and your script's
	# parameters to $PARAMS.

	# 1. All scripts should read from stdin and write to stdout.
	# 2. An error should be reported through a non-zero exit code.

	if [ $ERR == 0 ]
		then
		SCRIPT="comment" # name of the script
		PARAMS=" " # parameters the script takes, precede with space
		$SCRIPT_DIR/$SCRIPT$PARAMS < $TMP$f > $TMP$f.tmp # fmt comments
		ERR=$? # preserve in ERR
		mv $TMP$f.tmp $TMP$f
	fi

	if [ $ERR == 0 ]
		then
			mv $TMP$f $f # overwrite local with fmt'd copy
		else
			echo "error: no files were altered."
			break
	fi
done
rm -rf $TMP # remove tmp file
exit $?